rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Allow public read access to products and categories
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Allow users to read and write their own user data
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
      
      // Allow users to manage their own orders subcollection
      match /orders/{orderId} {
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId) && 
                       request.resource.data.items.size() > 0;
        allow update: if isAdmin() || 
                       (isOwner(userId) && 
                        resource.data.status != "cancelled" && 
                        request.resource.data.status == "cancelled");
        allow delete: if isAdmin();
      }
    }
    
    // Allow users to manage their own cart data
    match /userCarts/{userId} {
      allow read, write: if isOwner(userId);
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Allow users to create orders and read their own orders
    match /orders/{orderId} {
      // Validate order creation
      allow create: if isAuthenticated() && 
                     request.resource.data.userId == request.auth.uid &&
                     request.resource.data.items.size() > 0;
                     
      allow read: if isAuthenticated() && 
                   (resource.data.userId == request.auth.uid || isAdmin());
                   
      allow update: if isAdmin() || 
                     (isOwner(resource.data.userId) && 
                      resource.data.status != "cancelled" && 
                      request.resource.data.status == "cancelled");
                      
      allow delete: if isAdmin();
      
      // NEW: Allow users to manage their orders in the userOrders subcollection
      match /userOrders/{userOrderId} {
        allow read: if isOwner(orderId) || isAdmin();
        allow create: if isOwner(orderId) && 
                      request.resource.data.userId == request.auth.uid &&
                      request.resource.data.items.size() > 0;
        allow update: if isAdmin() || 
                      (isOwner(orderId) && 
                       resource.data.status != "cancelled" && 
                       request.resource.data.status == "cancelled");
        allow delete: if isAdmin();
      }
    }
    
    // Protect admin-only collections
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Admin notifications
    match /adminNotifications/{notificationId} {
      allow read, write: if isAdmin();
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}